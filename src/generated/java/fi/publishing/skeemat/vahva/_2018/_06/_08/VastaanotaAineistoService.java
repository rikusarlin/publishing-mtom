package fi.publishing.skeemat.vahva._2018._06._08;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.7
 * 2018-06-12T16:36:28.498+03:00
 * Generated source version: 3.1.7
 * 
 */
@WebServiceClient(name = "vastaanotaAineistoService", 
                  wsdlLocation = "file:/C:/Users/03111756/git/pub-cxf-mtom/src/main/resources/wsdl/VAHVA_publishing_20180608.wsdl",
                  targetNamespace = "http://www.publishing.fi/skeemat/vahva/2018/06/08") 
public class VastaanotaAineistoService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.publishing.fi/skeemat/vahva/2018/06/08", "vastaanotaAineistoService");
    public final static QName PublishingPort = new QName("http://www.publishing.fi/skeemat/vahva/2018/06/08", "publishingPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/03111756/git/pub-cxf-mtom/src/main/resources/wsdl/VAHVA_publishing_20180608.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(VastaanotaAineistoService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/03111756/git/pub-cxf-mtom/src/main/resources/wsdl/VAHVA_publishing_20180608.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public VastaanotaAineistoService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public VastaanotaAineistoService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public VastaanotaAineistoService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public VastaanotaAineistoService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public VastaanotaAineistoService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public VastaanotaAineistoService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns PublishingPort
     */
    @WebEndpoint(name = "publishingPort")
    public PublishingPort getPublishingPort() {
        return super.getPort(PublishingPort, PublishingPort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PublishingPort
     */
    @WebEndpoint(name = "publishingPort")
    public PublishingPort getPublishingPort(WebServiceFeature... features) {
        return super.getPort(PublishingPort, PublishingPort.class, features);
    }

}
